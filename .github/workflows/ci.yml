name: ci

on:
  push:
    branches:
      - 'main'

env:
  IMAGE_NAME: ${{ secrets.DOCKER_HUB_USERNAME }}/${{secrets.DOCKER_HUB_IMAGE_NAME}}:${{github.sha}}
  IMAGE_NAME_LATEST: ${{ secrets.DOCKER_HUB_USERNAME }}/${{secrets.DOCKER_HUB_IMAGE_NAME}}:latest
  NGINX_IMAGE_NAME: ${{ secrets.DOCKER_HUB_USERNAME }}/${{secrets.DOCKER_HUB_IMAGE_NAME}}-web:${{github.sha}}
  NGINX_IMAGE_NAME_LATEST: ${{ secrets.DOCKER_HUB_USERNAME }}/${{secrets.DOCKER_HUB_IMAGE_NAME}}-web:latest

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Build and push image
        run: |
          docker buildx build \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            -t ${IMAGE_NAME} -t ${IMAGE_NAME_LATEST} \
            --cache-from ${IMAGE_NAME_LATEST} --push .
  check:
    needs: build
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run tests
        run: |
          docker compose -f docker-compose-tests.yml up -d
          docker compose -f docker-compose-tests.yml exec -e FIXTURES_PATH=spec/fixtures app rails db:fixtures:load
          docker compose -f docker-compose-tests.yml exec app bundle exec rspec
          docker compose -f docker-compose-tests.yml exec app bundle exec rubocop
  build-web:
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - uses: docker/build-push-action@v2
        with:
          context: .
          file: .swarm/nginx/Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: |
            ${{ env.NGINX_IMAGE_NAME }}
            ${{ env.NGINX_IMAGE_NAME_LATEST }}
  deploy:
    needs: build-web
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: copy files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: ".swarm/docker-compose.yml"
          target: "~/github-analyzer-app/"
      - name: deploy application
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          envs: IMAGE_NAME,NGINX_IMAGE_NAME
          script: |
            IMAGE_NAME=${IMAGE_NAME} NGINX_IMAGE_NAME=${NGINX_IMAGE_NAME} docker stack deploy -c ~/github-analyzer-app/.swarm/docker-compose.yml github-analyzer
          